/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>


#define DEFAULT 0
#define NUM     1

&mt {
  tapping-term-ms = <200>;
  flavor = "tap-preferred";
};


/ {
  behaviors {
    hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_MODS";
      #binding-cells = <2>;
      tapping-term-ms = <200>;
      quick-tap-ms = <0>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
    };

    tdTabE: Tab_Esc {
      compatible = "zmk,behavior-tap-dance";
      label = "Tab_Esc";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp TAB>, <&kp ESC>;
    };

    tdqN1: Q_N1 {
      compatible = "zmk,behavior-tap-dance";
      label = "Q_N1";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp Q>, <&kp N1>;
    };

    tdwN2: W_N2 {
      compatible = "zmk,behavior-tap-dance";
      label = "W_N2";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp W>, <&kp N2>;
    };

    tdEN3: E_N3 {
      compatible = "zmk,behavior-tap-dance";
      label = "E_N3";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp E>, <&kp N3>;
    };

    tdRN4: R_N4 {
      compatible = "zmk,behavior-tap-dance";
      label = "R_N4";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp R>, <&kp N4>;
    };

    tdRTN5: T_N5 {
      compatible = "zmk,behavior-tap-dance";
      label = "T_N5";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp T>, <&kp N5>;
    };

    tdYN6: Y_N6 {
      compatible = "zmk,behavior-tap-dance";
      label = "Y_N6";
      #binding-cells = <0>;
      apping-term-ms = <200>;
      bindings = <&kp Y>, <&kp N6>;
    };

    tdUN7: U_N7 {
      compatible = "zmk,behavior-tap-dance";
      label = "U_N7";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp U>, <&kp N7>;
    };

    tdIN8: I_N8 {
      compatible = "zmk,behavior-tap-dance";
      label = "I_N8";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp I>, <&kp N8>;
    };

    tdON9: O_N9 {
      compatible = "zmk,behavior-tap-dance";
      label = "O_N9";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp O>, <&kp N9>;
    };

    tdPN0: P_N0 {
      compatible = "zmk,behavior-tap-dance";
      label = "P_N0";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp P>, <&kp N0>;
    };

    tdDELBSlH: DEL_BSLASH {
      compatible = "zmk,behavior-tap-dance";
      label = "DELBSLH";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp DEL>, <&kp BSLH>;
    };

    tdaMINUS: A_MINUS {
      compatible = "zmk,behavior-tap-dance";
      label = "A_MINUS";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp A>, <&kp KP_MINUS>;
    };

    tdsPLUS: s_PLUS {
      compatible = "zmk,behavior-tap-dance";
      label = "s_PLUS";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp S>, <&kp KP_PLUS>;
    };

    tddLEFT: d_LEFT {
      compatible = "zmk,behavior-tap-dance";
      label = "d_LEFT";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp D>, <&kp LEFT>;
    };

    tdfDOWN: F_DOWN {
      compatible = "zmk,behavior-tap-dance";
      label = "F_DOWN";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp F>, <&kp DOWN>;
    };

    tdgSPACE: g_SPACE {
      compatible = "zmk,behavior-tap-dance";
      label = "g_SPACE";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp G>, <&kp SPACE>;
    };

    tdhSPACE: h_SPACE {
      compatible = "zmk,behavior-tap-dance";
      label = "h_SPACE";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp H>, <&kp SPACE>;
    };

    tdjUP: j_UP {
      compatible = "zmk,behavior-tap-dance";
      label = "j_UP";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp J>, <&kp UP>;
    };

    tdkRIGHT: k_RIGHT {
      compatible = "zmk,behavior-tap-dance";
      label = "k_RIGHT";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp K>, <&kp RIGHT>;
    };

    tdlGRAVE: l_GRAVE {
      compatible = "zmk,behavior-tap-dance";
      label = "l_GRAVE";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp L>, <&kp GRAVE>;
    };

    tdSEMIAPOS: SEMI_APOS {
      compatible = "zmk,behavior-tap-dance";
      label = "SEMI_QUO";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp SEMI>, <&kp APOS>;
    };

    tdRSHFRET: RSHIFT_RET {
      compatible = "zmk,behavior-tap-dance";
      label = "RSHIFT_RET";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp RSHIFT>, <&kp RET>;
    };

    tdzx: z_x {
      compatible = "zmk,behavior-tap-dance";
      label = "z_x";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp Z>, <&kp X>;
    };

    tdcSPACE: c_SPACE {
      compatible = "zmk,behavior-tap-dance";
      label = "c_SPACE";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp C>, <&kp SPACE>;
    };

    tdvSPACE: v_SPACE {
      compatible = "zmk,behavior-tap-dance";
      label = "v_SPACE";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp V>, <&kp SPACE>;
    };

    tdSPACEb: SPACE_b {
      compatible = "zmk,behavior-tap-dance";
      label = "SPACE_b";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp SPACE>, <&kp B>;
    };

    tdnSPACE: n_SPACE {
      compatible = "zmk,behavior-tap-dance";
      label = "n_SPACE_x";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp N>, <&kp SPACE>;
    };

    tdmSPACE: m_SPACE{
      compatible = "zmk,behavior-tap-dance";
      label = "m_SPACE";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp M>, <&kp SPACE>;
    };

    tdCOMALBKT: COMA_LBKT{
      compatible = "zmk,behavior-tap-dance";
      label = "COMA_LBKT";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp COMMA>, <&kp LBKT>;
    };

    tdDOTRBKT: DOT_RBKT {
      compatible = "zmk,behavior-tap-dance";
      label = "DOT_RBKT";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp DOT>, <&kp RBKT>;
    };
 };

 combos {
   compatible = "zmk,combos";
   combo_fnone {
     timeout-ms = <50>;
     key-positions = <1 11>;
     bindings = <&kp F1>;
   };
     
   combo_fntwo {
     timeout-ms = <50>;
     key-positions = <2 11>;
     bindings = <&kp F2>;
   };
     
   combo_fnthree {
     timeout-ms = <50>;
     key-positions = <3 11>;
     bindings = <&kp F3>;
   };

   combo_ffour {
     timeout-ms = <50>;
     key-positions = <4 11>;
     bindings = <&kp F4>;
   };
    
   combo_ffive {
     timeout-ms = <50>;
     key-positions = <5 11>;
     bindings = <&kp F5>;
   };
    
   combo_fsix {
     timeout-ms = <50>;
     key-positions = <0 6>;
     bindings = <&kp F6>;
   };
      
   combo_fnseven {
     timeout-ms = <50>;
     key-positions = <0 7>;
     bindings = <&kp F7>;
   };
      
   combo_fneight {
     timeout-ms = <50>;
     key-positions = <0 8>;
     bindings = <&kp F8>;
   };
      
   combo_fnnine {
     timeout-ms = <50>;
     key-positions = <0 9>;
     bindings = <&kp F9>;
   };
      
   
   combo_fn10 {
     timeout-ms = <50>;
     key-positions = <0 10>;
     bindings = <&kp F10>;
   };
      
   combo_fneleven {
     timeout-ms = <50>;
     key-positions = <0 11>;
     bindings = <&kp F11>;
   };
      
  combo_btzero{
     timeout-ms = <50>;
     key-positions = <0 11 24 35>;
     bindings = <&bt BT_SEL 0>;
   };
      
  combo_btone {
     timeout-ms = <50>;
     key-positions = <1 10 25 34>;
     bindings = <&bt BT_SEL 1>;
    };
      
  combo_bttwo{
     timeout-ms = <50>;
     key-positions = <2 9 26 33>;
     bindings = <&bt BT_SEL 2>;
    };
      
  combo_btthree {
     timeout-ms = <50>;
     key-positions = <3 27 8 32>;
     bindings = <&bt BT_SEL 3>;
    };
      
  combo_btfour {
      timeout-ms = <50>;
      key-positions = <4 28 7  31>;
      bindings = <&bt BT_SEL 4>;
    };
      
  combo_btclr {
      timeout-ms = <50>;
      key-positions = <5 6 29 30>;
      bindings = <&bt BT_CLR>;
    };
      
  combo_btout{
      timeout-ms = <50>;
      key-positions = <17 18>;
      bindings = <&out OUT_TOG>;
    };
      
  combo_briup {
      timeout-ms = <50>;
      key-positions = <16 19 20>;
      bindings = <&kp C_BRI_UP>;
    };
      
  combo_bridn{
      timeout-ms = <50>;
      key-positions = <15 19 20>;
      bindings = <&kp C_BRI_DN>;
    };
      
  combo_volup {
      timeout-ms = <50>;
      key-positions = <15 16 20>;
      bindings = <&kp C_VOL_UP>;
    };
      
  combo_mut {
      timeout-ms = <50>;
      key-positions = <16 17 18 19>;
      bindings = <&kp C_MUTE>;
    };
      
  combo_cpswrd {
      timeout-ms = <50>;
      key-positions = <12 23>;
      bindings = <&caps_word>;
    };
      
  combo_spce {
      timeout-ms = <50>;
      key-positions = <29 30>;
      bindings = <&kp SPACE>;
    };
      
  combo_voldn {
      timeout-ms = <50>;
      key-positions = <15 16 19>;
      bindings = <&kp C_VOL_DN>;
    };
      
  combo_dfltlyr{
      timeout-ms = <50>;
      key-positions = <22 23>;
      bindings = <&to 0 >;
    };
      
  combo_numlyr{
      timeout-ms = <50>;
      key-positions = <34 35>;
      bindings = <&to 1>;
    };
  };


keymap {
    compatible = "zmk,keymap";	

  default_layer {
    bindings = <

&tdTABE     &tdqN1       &tdwN2         &tdeN3      &tdrN4      &tdtN5       &tdyN6       &tduN7      &tdiN8      &tdoN9       &tdpN0        &tdDELBSLH
&kb LSHFT   &tdaMINUS    &tdsKP_PLUS    &tddLEFT    &tdfDOWN    &tdgSPACE    &kphSPACE    &tdjUP      &tdkRIGHT   &tdlGRAVE    &tdSEMIAPOS   &tdRSHFTRET
&MT LCTRL   &MT LALT     &MT LGUI 	    &tdxz       &tdcSPACE   &tdvSPACE    &tdSPACEb    &tdnSPACE   &tdmSPACE   &tdCOMALBKT  &tdDOTRBKT    &kp FSLH

            >;
        };	

  Num_layer {
    bindings = <

&tdTABE     &kp N1         &kp N2        &kp N3     &kp N4      &kp N5      &kp N6      &kp N7      &kp N8      &kp N9       &kp N0        &kp DEL
&kb LSHFT   &kp KP_MINUS   &kp KP_PLUS   &kp LEFT   &kp DOWN    &kp SPACE   &kp SPACE   &kp UP      &kp RIGHT   &tdLGRAVE    &tdSEMIAPOS   &kp RETURN	
&MT LCTRL   &MT LALT       &MT LGUI 	   &tdxz      &kp SPACE   &kp SPACE   &kp SPACE   &kp SPACE   &kp SPACE   &tdCOMALBKT  &tdDOTRBKT    &kp BSLH 

    >;
  };
 };
};